#include <iostream>
#include <vector>
#include <string>
#include <iomanip>  
using namespace std;

void printMatrix(const vector<vector<char>>& matrix) {
    for (int i = 0; i < matrix.size(); i++) {
        for (int j = 0; j < matrix[i].size(); j++) {
            cout << setw(2) << matrix[i][j];  }
        cout << endl;
    }
}


vector<vector<char>> rotateMatrix(const vector<vector<char>>& matrix) {
    int n = matrix.size();    
    int m = matrix[0].size();
    
    vector<vector<char>> rotated(m, vector<char>(n));

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            rotated[j][n - 1 - i] = matrix[i][j]; 
        }
    }

    return rotated;
}

int main() {
    string text = "A small cat";
    int rows = 3;
    int cols = 4;

    
    vector<vector<char>> matrix(rows, vector<char>(cols, ' '));  
    
    int index = 0;
    for (int i = 0; i < rows && index < text.length(); i++) {
        for (int j = 0; j < cols && index < text.length(); j++) {
            matrix[i][j] = text[index++];
        }
    }

    cout << "Original Matrix:" << endl;
    printMatrix(matrix);


    vector<vector<char>> rotatedMatrix = rotateMatrix(matrix);

    cout << "\nRotated Matrix (90 degrees clockwise):" << endl;
    printMatrix(rotatedMatrix);

   
    string decryptedText = "";
    for (int i = 0; i < rotatedMatrix.size(); i++) {
        for (int j = 0; j < rotatedMatrix[i].size(); j++) {
            decryptedText += rotatedMatrix[i][j];
        }
    }

    cout << "\nDecrypted Text: " << decryptedText << endl;

    return 0;
}
