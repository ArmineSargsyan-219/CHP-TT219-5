#include <iostream> 
 
class Matrix{
    private:
    int** matrix;
    int size;

    public:
    Matrix(int n){
        size = n;
        matrix = new int*[n];
    for (int i = 0; i < n; ++i) { 
        matrix[i] = new int[n]; 
    }
    } 

    ~Matrix(){
         for (int i = 0; i < size; ++i) { 
        delete[] matrix[i]; 
    } 
    delete[] matrix; 
    }

    void inputMatrix(){
         std::cout << "Enter " << size * size << " elements:" << std::endl; 
    for (int i = 0; i < size; ++i) { 
        for (int j = 0; j < size; ++j) { 
            std::cin >> matrix[i][j]; 
        } 
    } 
    }
    void printMatrix() { 
    for (int i = 0; i < size; ++i) { 
        for (int j = 0; j < size; ++j) { 
            std::cout << matrix[i][j] << " "; 
        } 
        std::cout << std::endl; 
    } 
} 

void rotateMatrix90DegreesClockwise() { 
     
    for (int i = 0; i < size; ++i) { 
        for (int j = i; j < size; ++j) { 
            int temp = *(*(matrix + i) + j);
            *(*(matrix + i) + j) = *(*(matrix +j) +i);
            *(*(matrix + j) + i) = temp; 
        } 
    } 
     
     
    for (int i = 0; i < size; ++i) { 
        for (int j = 0; j < size / 2; ++j) { 
            int temp = *(*(matrix +i ) + j);
            *(*(matrix + i) + j) = *(*(matrix + i) + (size-j-1) );
            *(*(matrix + i) + size-j-1 ) = temp;
        } 
    } 
} 
};
 

 
int main() { 
    int n; 
    std::cout << "Enter the size n for the n x n array: "; 
    std::cin >> n; 
 
    
    Matrix mat(n);
 
    mat.inputMatrix();

    std::cout << "Original matrix:" << std::endl;
    mat.printMatrix();

    mat.rotateMatrix90DegreesClockwise();

    std::cout << "Matrix after 90 degrees clockwise rotation:" << std::endl;
    mat.printMatrix();
 
 
    return 0; 
}
